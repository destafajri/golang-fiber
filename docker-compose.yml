version: "3.9"

services:
  server:
    container_name: golang-server
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 9000:9000
    volumes:
      - service-golang:/golang
    network_mode: golang-fiber_golang-network

  postgres-gofiber:
    container_name: postgres-gofiber
    image: postgres:alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: golang_user
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: golang_db
    networks:
      - golang-network
  mysql-gofiber:
    container_name: mysql-gofiber
    image: mysql:latest
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
    expose:
      - 3306
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: sample
      MYSQL_ROOT_PASSWORD: secret
    networks:
      - golang-network
  mongodb-gofiber:
    container_name: mongo-gofiber
    image: mongo:latest
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    volumes:
      - mongo-data:/var/lib/mongo
    networks:
      - golang-network

volumes:
  postgres-data:
    name: postgres-data
  mysql-data:
    name: mysql-data
  mongo-data:
    name: mongo-data
  service-golang:
    name: service-golang

networks:
  golang-network:
    driver: bridge
